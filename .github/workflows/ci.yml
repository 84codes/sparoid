name: CI
on: [push]

jobs:
  spec:
    name: Spec
    runs-on: ubuntu-latest
    container: 84codes/crystal:latest-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Shards install
        run: shards install --production
      - name: Spec
        run: crystal spec --no-color --order random
  format:
    name: Formatting
    runs-on: ubuntu-latest
    container: 84codes/crystal:latest-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Format check
        run: crystal tool format --check
  lint:
    name: Lint/Ameba
    runs-on: ubuntu-latest
    container: 84codes/crystal:latest-alpine
    steps:
      - name: Install make
        run: apk add --no-cache make yaml-dev
      - name: Checkout
        uses: actions/checkout@v3
      - name: Shards install
        run: shards install
      - name: Spec
        run: bin/ameba --no-color
  docker:
    name: Docker container
    needs: [spec, format, lint]
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Get version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: 84codes/sparoid
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          tags: |
            84codes/sparoid:latest-alpine
            84codes/sparoid:latest
            84codes/sparoid:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
  deb:
    name: Deb package
    needs: [spec, format, lint]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, debian-10, debian-11]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        name: Build
        with:
          file: deb.dockerfile
          platforms: linux/${{ matrix.arch }}
          build-args: |
            build_image=84codes/crystal:1.5.0-${{ matrix.os }}
          outputs: builds
      - name: Upload to PackageCloud
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          set -eux
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          PKG_FILE=$(find builds -name "*.deb" | head -1)
          ID=$(echo $PKG_FILE | cut -d/ -f2)
          VERSION_CODENAME=$(echo $PKG_FILE | cut -d/ -f3)
          DIST_ID=$(jq ".deb[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VERSION_CODENAME}\").id" distributions.json)
          curl -fsS -u "${{ secrets.packagecloud_token }}:" -XPOST \
            -F "package[distro_version_id]=${DIST_ID}" \
            -F "package[package_file]=@${PKG_FILE}" \
            https://packagecloud.io/api/v1/repos/cloudamqp/sparoid/packages.json

  rpm:
    name: RPM package
    needs: [spec, format, lint]
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        os: [fedora-35, fedora-36]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v3
        with:
          file: rpm.dockerfile
          platforms: linux/${{ matrix.arch }}
          build-args: |
            build_image=84codes/crystal:1.5.0-${{ matrix.os }}
          outputs: builds
      - name: Upload to PackageCloud
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          set -eux
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          ID=$(echo ${{ matrix.os }} | cut -d- -f1)
          VR=$(echo ${{ matrix.os }} | cut -d- -f2)
          DIST_ID=$(jq ".rpm[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VR}\").id" distributions.json)
          find builds -name "*.rpm" | xargs -i \
            curl -fsS -u "${{ secrets.packagecloud_token }}:" -XPOST \
                 -F "package[distro_version_id]=${DIST_ID}" \
                 -F "package[package_file]=@{}" \
                 https://packagecloud.io/api/v1/repos/cloudamqp/sparoid/packages.json

  tar:
    runs-on: ubuntu-latest
    needs: [spec, format, lint]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Build tar package
        uses: docker/build-push-action@v3
        with:
          file: tar.dockerfile
          outputs: .
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: '*.tar.gz'
          fail_on_unmatched_files: true
